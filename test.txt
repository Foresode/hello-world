import 'package:flutter/material.dart';
import 'dart:io';
import 'package:connectivity_plus/connectivity_plus.dart';
import 'package:path_provider/path_provider.dart';
import 'package:webview_flutter/webview_flutter.dart';  // 最新的 webview_flutter 包

class OfflineWebViewApp extends StatefulWidget {
  @override
  _OfflineWebViewAppState createState() => _OfflineWebViewAppState();
}

class _OfflineWebViewAppState extends State<OfflineWebViewApp> {
  late final WebViewController _controller;
  bool _isOnline = false;

  @override
  void initState() {
    super.initState();

    // 根据平台设置 WebView
    if (Platform.isAndroid) {
      WebView.platform = SurfaceAndroidWebView();  // 设置为 Android 的 WebView
    } else if (Platform.isIOS) {
      WebView.platform = CupertinoWebView();  // 设置为 iOS 的 WebView
    }

    // 初始化 WebView 控制器
    _controller = WebViewController()
      ..setJavaScriptMode(JavaScriptMode.unrestricted)
      ..setNavigationDelegate(
        NavigationDelegate(
          onPageFinished: (String url) async {
            if (_isOnline) {
              _cacheWebPage(); // 缓存网页
            }
          },
        ),
      );

    // 检查网络状态
    _checkNetworkStatus();
  }

  /// 检查网络状态
  Future<void> _checkNetworkStatus() async {
    var connectivityResult = await Connectivity().checkConnectivity();
    setState(() {
      _isOnline = connectivityResult != ConnectivityResult.none;
    });

    if (_isOnline) {
      // 有网络时加载远程网页并缓存
      _controller.loadRequest(Uri.parse('https://example.com'));
    } else {
      // 无网络时加载本地缓存的网页
      String localHtml = await _loadHtmlFromLocal();
      if (localHtml.isNotEmpty) {
        _controller.loadHtmlString(localHtml);
      } else {
        ScaffoldMessenger.of(context).showSnackBar(SnackBar(
          content: Text('No internet and no local cache available!'),
        ));
      }
    }
  }

  /// 将远程网页内容缓存到本地
  Future<void> _cacheWebPage() async {
    try {
      final htmlContent = await _controller.runJavaScriptReturningResult(
          'document.documentElement.outerHTML');
      if (htmlContent != null) {
        final directory = await getApplicationDocumentsDirectory();
        final file = File('${directory.path}/offline_page.html');
        await file.writeAsString(htmlContent.toString());
        ScaffoldMessenger.of(context).showSnackBar(SnackBar(
          content: Text('Page cached for offline use'),
        ));
      }
    } catch (e) {
      print('Error caching webpage: $e');
    }
  }

  /// 从本地加载缓存的 HTML 页面
  Future<String> _loadHtmlFromLocal() async {
    try {
      final directory = await getApplicationDocumentsDirectory();
      final file = File('${directory.path}/offline_page.html');
      return await file.readAsString();
    } catch (e) {
      print('Error loading local HTML: $e');
      return '';
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Offline WebView Example"),
      ),
      body: WebViewWidget(controller: _controller),  // 使用 WebViewWidget 来显示 WebView
    );
  }
}

void main() {
  runApp(MaterialApp(
    home: OfflineWebViewApp(),
  ));
}
