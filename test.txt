import 'package:flutter/material.dart';
import 'package:webview_flutter/webview_flutter.dart';
import 'dart:io';
import 'package:connectivity_plus/connectivity_plus.dart';
import 'package:path_provider/path_provider.dart';

class OfflineWebViewApp extends StatefulWidget {
  @override
  _OfflineWebViewAppState createState() => _OfflineWebViewAppState();
}

class _OfflineWebViewAppState extends State<OfflineWebViewApp> {
  WebViewController? _controller;
  bool _isOnline = false;
  bool _isLoading = true;

  @override
  void initState() {
    super.initState();
    _initializeController();
  }

  /// 初始化 WebView 控制器和检查网络状态
  Future<void> _initializeController() async {
    await WebView.platformInitialize();
    _controller = null;
    await _checkNetworkStatus();
  }

  /// 检查网络状态
  Future<void> _checkNetworkStatus() async {
    var connectivityResult = await Connectivity().checkConnectivity();
    setState(() {
      _isOnline = connectivityResult != ConnectivityResult.none;
    });

    if (_isOnline) {
      _controller?.loadUrl('https://example.com').then((_) {
        setState(() {
          _isLoading = false;
        });
        _cacheWebPage();
      });
    } else {
      String localHtml = await _loadHtmlFromLocal();
      if (localHtml.isNotEmpty) {
        _controller?.loadUrl(Uri.dataFromString(localHtml, mimeType: 'text/html', encoding: Encoding.getByName('utf-8')).toString()).then((_) {
          setState(() {
            _isLoading = false;
          });
        });
      } else {
        setState(() {
          _isLoading = false;
        });
        ScaffoldMessenger.of(context).showSnackBar(SnackBar(
          content: Text('No internet and no local cache available!'),
        ));
      }
    }
  }

  /// 将远程网页内容缓存到本地
  Future<void> _cacheWebPage() async {
    try {
      final htmlContent = await _controller?.evaluateJavascript('document.documentElement.outerHTML');
      if (htmlContent != null) {
        final directory = await getApplicationDocumentsDirectory();
        final file = File('${directory.path}/offline_page.html');
        await file.writeAsString(htmlContent);
        ScaffoldMessenger.of(context).showSnackBar(SnackBar(
          content: Text('Page cached for offline use'),
        ));
      }
    } catch (e) {
      print('Error caching webpage: $e');
    }
  }

  /// 从本地加载缓存的 HTML 页面
  Future<String> _loadHtmlFromLocal() async {
    try {
      final directory = await getApplicationDocumentsDirectory();
      final file = File('${directory.path}/offline_page.html');
      return await file.readAsString();
    } catch (e) {
      print('Error loading local HTML: $e');
      return '';
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Offline WebView Example"),
      ),
      body: Stack(
        children: [
          WebView(
            initialUrl: '',
            onWebViewCreated: (WebViewController webViewController) {
              if (_controller == null) {
                _controller = webViewController;
              }
            },
            javascriptMode: JavascriptMode.unrestricted,
            onPageStarted: (url) {
              setState(() {
                _isLoading = true;
              });
            },
            onPageFinished: (url) {
              setState(() {
                _isLoading = false;
              });
            },
          ),
          if (_isLoading)
            Center(
              child: CircularProgressIndicator(),
            ),
        ],
      ),
    );
  }
}

void main() {
  runApp(MaterialApp(
    home: OfflineWebViewApp(),
  ));
}
