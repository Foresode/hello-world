import 'package:flutter/material.dart';
import 'package:webview_flutter/webview_flutter.dart';
import 'package:path_provider/path_provider.dart';
import 'dart:io';
import 'dart:convert';

class WebViewCachePage extends StatefulWidget {
  @override
  _WebViewCachePageState createState() => _WebViewCachePageState();
}

class _WebViewCachePageState extends State<WebViewCachePage> {
  WebViewController _controller;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Web Page Cache'),
      ),
      body: WebView(
        initialUrl: 'https://example.com', // 替换为你要缓存的网页地址
        javascriptMode: JavascriptMode.unrestricted,
        onPageFinished: (url) async {
          // 确保 WebViewController 已初始化
          if (_controller != null) {
            // 获取网页内容并缓存到本地
            String htmlContent = await _controller.evaluateJavascript(
              "window.document.getElementsByTagName('html')[0].outerHTML;"
            );
            await _cacheHtmlContent(htmlContent);
          }
        },
        onWebViewCreated: (WebViewController webViewController) {
          _controller = webViewController; // 初始化 WebViewController
        },
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: _loadCachedPage, // 手动加载缓存的网页
        child: Icon(Icons.offline_pin),
      ),
    );
  }

  // 缓存网页内容到本地文件
  Future<void> _cacheHtmlContent(String content) async {
    final directory = await getApplicationDocumentsDirectory();
    final file = File('${directory.path}/cached_page.html');
    await file.writeAsString(content);
    print('HTML content cached successfully');
  }

  // 加载缓存的网页内容
  Future<void> _loadCachedPage() async {
    final directory = await getApplicationDocumentsDirectory();
    final file = File('${directory.path}/cached_page.html');
    if (await file.exists()) {
      String cachedHtml = await file.readAsString();
      _controller.loadUrl(Uri.dataFromString(
        cachedHtml,
        mimeType: 'text/html',
        encoding: Encoding.getByName('utf-8'),
      ).toString());
    } else {
      print('No cached page available');
    }
  }
}



import 'package:connectivity_plus/connectivity_plus.dart';

Future<void> _checkNetworkAndLoadPage() async {
  var connectivityResult = await Connectivity().checkConnectivity();
  if (connectivityResult == ConnectivityResult.none) {
    // 没有网络时加载缓存的页面
    await _loadCachedPage();
  } else {
    // 有网络时加载在线网页
    _controller.loadUrl('https://example.com');
  }
}


